package com.malware.application.camel;

import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class is used in a Camel route, and will extract the file extension from a path stored in a header.
 */
public class FileExtensionExtractor implements Processor {

    private static final Logger LOG = LoggerFactory.getLogger(FileExtensionExtractor.class);
    private static final int INDEX_NOT_FOUND = -1;

    private final String inHeader;
    private final String outHeader;

    /**
     * Create a new processor instance.
     * @param inHeader The name of the header containing the file to extract the extension from
     * @param outHeader the header to set the parsed file extension to
     */
    public FileExtensionExtractor(String inHeader, String outHeader) {
        this.inHeader = inHeader;
        this.outHeader = outHeader;
    }

    @Override
    public void process(Exchange exchange) {
        exchange.setOut(exchange.getIn());
        String filePath = exchange.getIn().getHeader(inHeader, String.class);

        if (filePath == null){
            LOG.warn("Failed to get header {} from input. Value was null", inHeader);
            exchange.getOut().setHeader(outHeader, null);
        } else {
            String fileName = getFileName(filePath);

            // Find index of the '.' character, and extract everything after it.
            int dotIdx = fileName.indexOf('.');

            if (dotIdx == INDEX_NOT_FOUND) {
                LOG.warn("Value \"{}\" does not have a file extension", filePath);
                exchange.getOut().setHeader(outHeader, null);
            } else {
                String extension = fileName.substring(dotIdx);
                LOG.info("Got extension \"{}\"", extension);
                exchange.getOut().setHeader(outHeader, extension);
            }
        }
    }

    private String getFileName(String filePath) {
        if (filePath.contains("/")) {
            String[] split = filePath.split("/");
            return split[split.length - 1];
        } else {
            return filePath;
        }
    }
}
